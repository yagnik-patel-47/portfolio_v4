---
import MobileNav from '@/components/MobileNav.astro'
import RootLayout from '@/layouts/Root.astro'
import { sliderIcons, techIcons } from '@/lib/icons-map'
import { Image, Picture } from 'astro:assets'
import { featuredProjects } from '@/lib/projects-data'
import { Icon } from 'astro-icon/components'
import DesktopNav from '@/components/DesktopNav.astro'
---

<RootLayout title="/yagnik">
  <DesktopNav />
  <MobileNav />
  <main class="min-h-dvh py-28 md:py-30 container mx-auto px-8 lg:px-20">
    <h3
      class="text-xl md:text-2xl font-inter-tight font-semibold text-zinc-700"
      id="name"
    >
      Hello! I'm Yagnik.
    </h3>
    <p
      class="mt-4 text-2xl md:text-4xl max-w-3xl font-bold font-inter-tight text-zinc-800 opacity-0"
      id="para"
    >
      I'm a second-year computer science student at KPGU with a passion for
      creating awesome and engaging web experiences. My days are filled with
      coding and exploring new ideas. Letâ€™s create something amazing together!
    </p>
    <div
      class="items-center whitespace-nowrap space-x-8 md:space-x-12 overflow-hidden opacity-0 flex pt-10"
      id="list-container-1"
    >
      {
        Array.from({ length: 2 }).map(() => (
          <div class="inline-flex gap-x-8 md:gap-x-12 w-max list">
            {Object.entries(sliderIcons).map(([iconName, icon]) => (
              <div class="w-max aspect-square p-3 md:p-5 bg-zinc-100 rounded-[19px] relative group">
                <div class="absolute bottom-[calc(100%+0.5rem)] py-0.5 px-4 rounded-full bg-zinc-100 left-1/2 -translate-x-1/2 text-xs md:text-sm opacity-0 group-hover:opacity-100 group-hover:scale-100 transition scale-50 origin-bottom">
                  {iconName}
                </div>
                <Image
                  class="object-contain aspect-square rounded-lg"
                  width={40}
                  height={40}
                  src={icon}
                  alt={iconName}
                  loading="eager"
                />
              </div>
            ))}
          </div>
        ))
      }
    </div>
    <section class="rounded-2xl mt-20 space-y-12">
      <h1
        class="text-2xl md:text-3xl font-inter-tight text-zinc-800 font-bold mt-4 mb-8 md:mb-12 opacity-0"
        id="featured-projects-title"
      >
        Featured Projects
      </h1>
      {
        featuredProjects.map((project) => (
          <div class="flex flex-col-reverse md:flex-row gap-2 md:gap-8 project opacity-0">
            <div class="flex flex-1 flex-col justify-between py-4 md:px-0 px-2">
              <h2 class="text-2xl font-semibold font-inter-tight mb-2">
                {project.name}
              </h2>
              <div class="space-y-4">
                <p class="text-balance">{project.discription}</p>
                <div class="flex gap-3">
                  {project.tech.map((tech) => (
                    <Picture
                      width={32}
                      height={32}
                      src={techIcons[tech]}
                      alt={tech}
                      formats={['avif']}
                      class="size-8 object-contain rounded-md"
                    />
                  ))}
                </div>
              </div>
            </div>
            <div class="relative after:rounded-2xl md:w-1/2 after:absolute after:inset-0 after:inset-ring-black/20 after:inset-ring-5 hover:after:inset-ring-8 after:transition">
              <Picture
                width={750}
                height={500}
                src={project.image}
                alt={project.name}
                formats={['avif']}
                class="rounded-2xl w-full object-cover"
                layout="responsive"
              />
            </div>
          </div>
        ))
      }
    </section>
    <h2
      class="text-2xl md:text-3xl font-inter-tight text-zinc-800 font-bold mt-20 md:mt-40 mb-4 md:mb-8"
    >
      My Expertise
    </h2>
    <div class="flex flex-col md:flex-row gap-20">
      <p class="basis-1/3 shrink-0 text-lg text-balance">
        I am dedicated to expanding my knowledge and expertise in my field.
        Throughout my time in school and university, I've acquired various
        skills that I continue to perfect.
      </p>
      <div class="grid md:grid-cols-2">
        <div class="grid gap-4 h-fit">
          <Icon class="size-10" name="social/github" />
          <h3 class="text-lg font-medium">Crafting UI into Web Experiences</h3>
          <p>
            I love creating UI interactions that feel good. I really enjoy the
            process of making something that is fun and accessible to use.
          </p>
        </div>
      </div>
    </div>
  </main>
</RootLayout>

<style is:global>
  @keyframes slider {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(calc(-100% - 2rem));
    }
  }

  #list-container-1 {
    mask-image: linear-gradient(90deg, transparent, black 10% 90%, transparent);
  }

  .list {
    animation: slider 40s linear infinite;
  }

  .line,
  #name {
    opacity: 0;
  }

  @media (min-width: 768px) {
    @keyframes slider {
      from {
        transform: translateX(0);
      }
      to {
        transform: translateX(calc(-100% - 3rem));
      }
    }
    .list {
      animation: slider 40s linear infinite;
    }
  }
</style>

<script>
  import SplitType from 'split-type'
  import { stagger, animate, inView } from 'motion'

  const para = SplitType.create('#para', { types: 'lines' })
  document.getElementById('para').style.opacity = '1'

  animate(
    '#name',
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
    },
  )
  animate(
    para.lines,
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
      delay: stagger(0.025),
    },
  )
  animate(
    '#list-container-1',
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
    },
  )
  animate(
    '#featured-projects-title',
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
    },
  )

  inView(
    '.project',
    (info) => {
      animate(
        info.target,
        {
          y: [10, 0],
          opacity: [0, 1],
        },
        {
          duration: 1.25,
          type: 'spring',
        },
      )
    },
    { amount: 0.75 },
  )
</script>
