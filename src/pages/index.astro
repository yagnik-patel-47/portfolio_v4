---
import Nav from '@/components/Nav.astro'
import RootLayout from '@/layouts/Root.astro'
import { projects } from '@/lib/projects-data'
import { Image } from 'astro:assets'
import { skillIcons } from '@/lib/icons-map'
---

<RootLayout title="/yagnik">
  <Nav />
  <main class="h-dvh py-28 md:py-40 container mx-auto px-4 lg:px-20">
    <h3 class="text-3xl md:text-4xl font-bold text-zinc-400 font-header">
      Yagnik Patel
    </h3>

    <p
      class="mt-6 text-xl md:text-3xl font-bold text-zinc-800 max-w-3xl overflow-hidden"
      id="para"
    >
      Hey there! I’m a second-year computer science student @KPGU with a passion
      for building awesome, engaging web experiences. My days are filled with
      coding, exploring new ideas, and a bit of a caffeine-fueled grind. Let’s
      make something amazing together!
    </p>
    <div
      style={{
        maskImage:
          'linear-gradient(to right,transparent,#000 5% 95%,transparent)',
      }}
      class="mt-10 w-full overflow-hidden"
      id="slider"
    >
      <div id="slider-list" class="flex">
        {
          projects.map((project) => (
            <Image
              class="w-60 md:w-80 slide object-cover"
              src={project.image}
              alt={project.name}
              loading="eager"
              data-tech={project.tech.join('_')}
            />
          ))
        }
      </div>
    </div>
    <img
      id="tech_img"
      class="size-14 object-contain opacity-0 scale-0 hidden fixed p-2 bg-white rounded-xl pointer-events-none transition duration-300"
      src={skillIcons['React'].src}
      alt="tech_icon"
    />
  </main>
</RootLayout>

<script>
  import { skillIcons } from '@/lib/icons-map'

  function setupCode() {
    const sliderList = document.querySelector('#slider-list') as HTMLDivElement
    const techImg = document.querySelector('#tech_img') as HTMLImageElement

    document.querySelectorAll('.slide').forEach((slide) => {
      const clone = slide.cloneNode(true)
      sliderList.appendChild(clone)
    })

    const slides = document.querySelectorAll(
      '.slide',
    ) as NodeListOf<HTMLImageElement>
    const slideWidth = slides[0].offsetWidth
    const totalSlides = slides.length * 2
    const totalWidth = slideWidth * totalSlides

    let position = 0
    let speed = 2

    function animateSlider() {
      position -= speed
      if (Math.abs(position) >= totalWidth / 2) {
        position = 0
      }
      sliderList.style.transform = `translateX(${position}px)`
      requestAnimationFrame(animateSlider)
    }

    sliderList.style.width = `${totalWidth}px`

    animateSlider()

    let intervalId: NodeJS.Timeout

    for (const slide of slides) {
      slide.addEventListener('mouseenter', () => {
        speed = 1
        techImg.style.display = 'block'
        techImg.style.opacity = '1'
        techImg.style.transform = 'scale(1)'
        let index = 0
        const tech = slide.dataset.tech.split('_')
        intervalId = setInterval(() => {
          techImg.src = skillIcons[tech[index]].src
          index = (index + 1) % tech.length
        }, 500)
      })
      slide.addEventListener('mousemove', (e) => {
        techImg.style.left = `${e.clientX}px`
        techImg.style.top = `${e.clientY - 48}px`
      })
      slide.addEventListener('mouseout', () => {
        speed = 2
        techImg.style.opacity = '0'
        techImg.style.transform = 'scale(0)'
        if (intervalId) clearInterval(intervalId)
      })
    }
  }
  document.addEventListener('astro:after-swap', () => {
    setupCode()
  })
  setupCode()
</script>
