---
import MobileNav from '@/components/MobileNav.astro'
import RootLayout from '@/layouts/Root.astro'
import { techIcons } from '@/lib/icons-map'
import { Image, Picture } from 'astro:assets'
import { featuredProjects } from '@/lib/projects-data'
import { Icon } from 'astro-icon/components'
import DesktopNav from '@/components/DesktopNav.astro'

const learning = ['Software', 'Computer Networking', 'Design Patterns', 'DSA']
const expertise = ['Frontend', 'UI Interactions', 'SASS']
---

<RootLayout title="/yagnik">
  <DesktopNav />
  <MobileNav />
  <main class="container mx-auto lg:px-20 pb-30 px-8 lg:p-10 mt-6">
    <div
      id="grid"
      class="min-h-dvh lg:min-h-[calc(100svh-4.5rem)] grid grid-cols-2 justify-center gap-5 p-5 rounded-3xl"
    >
      <div
        class="col-span-2 py-10 bg-white lg:p-10 rounded-3xl grid items-center"
      >
        <p
          class="text-3xl text-balance md:text-5xl 2xl:text-6xl md:leading-14 2xl:leading-17 tracking-tight max-w-3xl 2xl:max-w-4xl md:text-pretty font-serif text-zinc-800 opacity-0"
          id="para"
        >
          Hi, I'm a second-year <span class="font-semibold">Computer</span>
          <span class="font-semibold">Science</span> student with a passion for creating
          <span class="font-semibold">awesome</span> and <span
            class="font-semibold">engaging</span
          >
          <span class="font-semibold">software</span>
          <span class="font-semibold">experiences</span>.
        </p>
      </div>
      <div class="bg-white rounded-2xl overflow-hidden relative pt-8 group">
        <h3
          class="font-black text-zinc-100 text-7xl 2xl:text-8xl uppercase absolute bottom-2 right-2 scale-[3] origin-bottom-right group-hover:scale-100 group-hover:text-zinc-200 blur-xs group-hover:blur-none transition duration-300 card-title pointer-events-none"
        >
          Learning
        </h3>
        <div class="lg:px-10 py-2">
          {
            learning.map((item) => (
              <div class="flex items-center gap-2 group/item overflow-x-clip learning-item">
                <Icon
                  class="size-7 -translate-x-full group-hover/item:translate-x-0 transition duration-300"
                  name="arrow-right"
                />
                <p class="text-2xl text-neutral-800 font-medium 2xl:text-3xl -translate-x-7 group-hover/item:translate-x-0 transition duration-300 cursor-default">
                  {item}
                </p>
              </div>
            ))
          }
        </div>
      </div>
      <div class="bg-white rounded-2xl overflow-hidden relative pt-8 group">
        <h3
          class="font-black text-zinc-100 text-7xl 2xl:text-8xl uppercase absolute bottom-2 right-2 scale-[3] origin-bottom-right group-hover:scale-100 group-hover:text-zinc-200 blur-xs group-hover:blur-none transition duration-300 card-title pointer-events-none"
        >
          Expertise
        </h3>
        <div class="lg:px-10 py-2">
          {
            expertise.map((item) => (
              <div class="flex items-center gap-2 group/item overflow-x-clip expertise-item">
                <Icon
                  class="size-7 -translate-x-full group-hover/item:translate-x-0 transition duration-300"
                  name="arrow-right"
                />
                <p class="text-2xl text-neutral-800 font-medium 2xl:text-3xl -translate-x-7 group-hover/item:translate-x-0 transition duration-300 cursor-default">
                  {item}
                </p>
              </div>
            ))
          }
        </div>
      </div>
    </div>
    <section class="rounded-2xl mt-20 space-y-12 px-10">
      <h1
        class="text-2xl md:text-3xl font-serif text-zinc-800 font-bold mt-4 mb-8 md:mb-12 opacity-0"
        id="featured-projects-title"
      >
        Featured Projects
      </h1>
      {
        featuredProjects.map((project) => (
          <div class="flex flex-col-reverse md:flex-row gap-2 md:gap-8 project opacity-0">
            <div class="flex flex-1 flex-col justify-between py-4 md:px-0 px-2">
              <h2 class="text-2xl font-semibold tracking-tight mb-2">
                {project.name}
              </h2>
              <div class="space-y-4">
                <p class="text-balance">{project.discription}</p>
                <div class="flex gap-3">
                  {project.tech.map((tech) => (
                    <Image
                      width={32}
                      height={32}
                      src={techIcons[tech]}
                      alt={tech}
                      class="size-8 object-contain rounded-md"
                    />
                  ))}
                </div>
              </div>
            </div>
            <div class="relative after:rounded-2xl md:w-1/2 after:absolute after:inset-0 after:inset-ring-black/20 after:inset-ring-5 hover:after:inset-ring-8 after:transition">
              <Picture
                width={750}
                height={500}
                src={project.image}
                alt={project.name}
                formats={['avif']}
                class="rounded-2xl w-full object-cover"
                layout="responsive"
              />
            </div>
          </div>
        ))
      }
    </section>
  </main>
</RootLayout>

<style is:global>
  .line,
  #name,
  .card-title,
  .learning-item,
  .expertise-item {
    opacity: 0;
  }

  @keyframes fade-to-white {
    from {
      background-color: #f4f4f5;
    }
    to {
      background-color: #ffffff;
    }
  }
</style>

<script>
  import SplitType from 'split-type'
  import { stagger, animate, inView } from 'motion'

  const para = SplitType.create('#para', { types: 'lines' })
  document.getElementById('para').style.opacity = '1'

  animate(
    para.lines,
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
      delay: stagger(0.025),
    },
  )
  animate(
    '.card-title',
    {
      opacity: [0, 1],
    },
    {
      duration: 0.5,
    },
  )

  animate(
    '#grid',
    {
      backgroundColor: ['#fff', '#f4f4f5'],
    },
    {
      duration: 0.5,
    },
  ).then(() => {
    document.getElementById('grid').style.animation =
      'fade-to-white linear both'
    // @ts-ignore
    document.getElementById('grid').style.animationTimeline = 'scroll()'
    // @ts-ignore
    document.getElementById('grid').style.animationRange = '30vh 110vh'
  })

  animate(
    document.querySelectorAll('.learning-item'),
    {
      x: [-30, 0],
      opacity: [0, 1],
    },
    {
      delay: stagger(0.025),
      duration: 1.25,
      type: 'spring',
    },
  )

  animate(
    document.querySelectorAll('.expertise-item'),
    {
      x: [-30, 0],
      opacity: [0, 1],
    },
    {
      delay: stagger(0.025),
      duration: 1.25,
      type: 'spring',
    },
  )

  animate(
    '#featured-projects-title',
    {
      y: [10, 0],
      opacity: [0, 1],
    },
    {
      duration: 1.25,
      type: 'spring',
    },
  )

  inView(
    '.project',
    (info) => {
      animate(
        info.target,
        {
          y: [10, 0],
          opacity: [0, 1],
        },
        {
          duration: 1.25,
          type: 'spring',
        },
      )
    },
    { amount: 0.75 },
  )
</script>
