---
const links = [
  {
    name: 'Projects',
    path: '/projects',
  },
  {
    name: 'About Me',
    path: '/about',
  },
  {
    name: 'Blogs',
    path: '/blog',
  },
  {
    name: 'Codebits',
    path: '/codebits',
  },
]

const socials = [
  {
    label: 'Twitter',
    href: 'https://x.com/yagnik_pt',
  },
  {
    label: 'Github',
    href: 'https://github.com/yagnik-patel-47',
  },
  {
    label: 'Hashnode',
    href: 'https://mytakeonweb.hashnode.dev',
  },
  {
    label: 'Linkedin',
    href: 'https://linkedin.com/in/yagnikpt',
  },
  {
    label: 'Instagram',
    href: 'https://instagram.com/yagnik._._.patel',
  },
]
---

<header
  transition:persist
  id="header"
  class="group sticky top-0 overflow-hidden z-20 has-[nav[data-nav-padding=true]]:shadow"
>
  <div id="nav-background" class="inset-0 absolute bg-white"></div>
  <nav
    class="flex justify-between items-center px-8 md:px-20 lg:px-32 2xl:px-72 py-8 data-[nav-padding=false]:lg:py-14 transition-[padding] motion-reduce:transition-none relative before:absolute before:inset-0 before:bg-neutral-950 before:z-[-1]"
    data-nav-padding="false"
  >
    <a
      class="text-xl lg:text-2xl flex items-center space-x-2 text-neutral-900 font-semibold group-data-[state=open]:text-neutral-100"
      href="/"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="size-7"
        ><rect width="18" height="10" x="3" y="11" rx="2"></rect><circle
          cx="12"
          cy="5"
          r="2"></circle><path d="M12 7v4"></path><line
          x1="8"
          x2="8"
          y1="16"
          y2="16"></line><line x1="16" x2="16" y1="16" y2="16"></line></svg
      >
      <span>yagnik.dev</span>
    </a>
    <div class="flex space-x-8 items-center">
      <a
        href="mailto:yagnik47.dev@gmail.com"
        class="block bg-neutral-900 text-neutral-100 group-data-[state=open]:bg-neutral-100 group-data-[state=open]:text-neutral-900 hover:bg-neutral-950 hover:text-neutral-50 px-4 py-2 rounded-full max-md:hidden"
        >Contact me</a
      >
      <button
        id="ham-btn"
        class="size-8 group-data-[state=open]:invert"
        aria-label="Menu"
      >
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 9h16.5m-16.5 6.75h16.5"></path>
        </svg>
      </button>
    </div>
  </nav>
  <div
    id="nav-content"
    class="overflow-hidden h-0 bg-neutral-950 text-neutral-200"
  >
    <div class="grid grid-cols-1 border-t-2 border-neutral-900 py-4">
      {
        links.map((work, index) => (
          <a
            href={work.path}
            class="text-3xl 2xl:text-7xl block font-semibold px-8 py-4 lg:py-6 hover:text-white md:pl-20 lg:pl-32 hover:bg-neutral-900 2xl:pl-72 transition nav-links"
          >
            {work.name}{' '}
            <span class="text-sm md:text-base lg:text-lg font-medium text-neutral-400">
              (0{index + 1})
            </span>
          </a>
        ))
      }
    </div>
    <div
      class="py-4 2xl:py-10 space-y-6 xl:space-y-10 px-8 md:px-20 lg:px-32 2xl:px-72 border-t-2 border-neutral-900"
    >
      <h3 class="text-xl xl:text-2xl text-neutral-400 font-semibold">
        Socials.
      </h3>
      <div class="grid md:flex gap-x-6 gap-y-8 responsive-cols">
        {
          socials.map((social) => (
            <a
              target="_blank"
              class="flex items-center gap-1 group/link"
              href={social.href}
            >
              <span class="uppercase text-xs sm:text-sm lg:text-base group-hover/link:-skew-x-[15deg] transition-transform">
                {social.label}
              </span>
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="20px"
                viewBox="0 -960 960 960"
                width="20px"
                fill="currentColor"
                class="size-4 shrink-0 md:size-5 transition-transform origin-bottom-left group-hover/link:-translate-y-0.5 group-hover/link:translate-x-0.5"
              >
                <path d="m256-240-56-56 384-384H240v-80h480v480h-80v-344L256-240Z" />
              </svg>
            </a>
          ))
        }
      </div>
      <a
        href="mailto:yagnik47.dev@gmail.com"
        class="block bg-neutral-100 text-neutral-900 text-center font-medium px-4 py-3 rounded-full md:hidden"
        >Contact me</a
      >
    </div>
  </div>
</header>

<style is:inline>
  nav::before {
    backdrop-filter: blur(3px) saturate(200%);
    -webkit-backdrop-filter: blur(3px) saturate(200%);
    background-color: rgba(255, 255, 255, 0.85);
  }

  .responsive-cols {
    grid-template-columns: repeat(auto-fit, minmax(6rem, max-content));
  }
</style>

<script>
  import gsap from 'gsap'
  const navElement = document.querySelector('nav')
  const navCollapseSection = document.getElementById('nav-content')!
  const navBackground = document.getElementById('nav-background')!
  let navContentHeight = navCollapseSection?.scrollHeight ?? 0
  const hamBtn = document.getElementById('ham-btn')!
  const header = document.getElementById('header')!
  const navLinks = document.querySelectorAll('.nav-links')

  const prefersReducedMotion = window.matchMedia(
    '(prefers-reduced-motion: reduce)',
  ).matches

  window.addEventListener('resize', () => {
    navContentHeight = navCollapseSection?.scrollHeight ?? 0
  })
  hamBtn.addEventListener('click', () => {
    if (header.dataset.state === 'open') setCloseState(prefersReducedMotion)
    else setOpenState(prefersReducedMotion)
  })

  document.addEventListener('click', (event) => {
    // @ts-ignore
    const isClickInside = header.contains(event.target)
    if (!isClickInside && header.dataset.state === 'open')
      setCloseState(prefersReducedMotion)
  })

  navLinks.forEach((link) => {
    link.addEventListener('click', () => {
      document.addEventListener('astro:after-swap', () => {
        setCloseState(prefersReducedMotion, false)
      })
    })
  })

  document.addEventListener('scroll', () => {
    if (window.scrollY > 0) navElement.dataset.navPadding = `true`
    else navElement.dataset.navPadding = `false`
  })

  function setOpenState(reducedMotion: boolean) {
    document.body.style.overflow = 'hidden'
    header.setAttribute('data-state', 'open')
    gsap.to(navCollapseSection, {
      height: navContentHeight,
      duration: reducedMotion ? 0 : 0.3,
    })
    gsap.to(navBackground, {
      yPercent: 100,
      duration: reducedMotion ? 0 : 0.3,
    })
  }
  function setCloseState(reducedMotion: boolean, animate = true) {
    header.setAttribute('data-state', 'closed')
    gsap
      .to(navCollapseSection, {
        height: 0,
        duration: reducedMotion || !animate ? 0 : 0.3,
      })
      .then(() => {
        document.body.style.overflow = 'visible'
      })
    gsap.to(navBackground, {
      yPercent: 0,
      duration: reducedMotion || !animate ? 0 : 0.3,
    })
  }
</script>
