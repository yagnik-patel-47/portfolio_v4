---
import { Icon } from 'astro-icon/components'

const links = [
  {
    name: 'Projects',
    path: '/projects',
  },
  {
    name: 'About Me',
    path: '/about',
  },
  {
    name: 'Codebits',
    path: '/codebits',
  },
]

const socials = [
  {
    label: 'Twitter',
    href: 'https://x.com/yagnik_pt',
    icon: 'x_dark',
  },
  {
    label: 'Github',
    href: 'https://github.com/yagnik-patel-47',
    icon: 'github-dark',
  },
  {
    label: 'Hashnode',
    href: 'https://mytakeonweb.hashnode.dev',
    icon: 'hashnode',
  },
  {
    label: 'Linkedin',
    href: 'https://linkedin.com/in/yagnikpt',
    icon: 'linkedin',
  },
  {
    label: 'Instagram',
    href: 'https://instagram.com/yagnik._._.patel',
    icon: 'instagram_dark',
  },
]
---

<div
  transition:persist
  id="floatingBarContainer"
  class="group fixed !inset-x-4 max-md:inset-x-0 md:max-w-2xl border-2 border-neutral-800 md:!left-1/2 md:!-translate-x-1/2 bottom-4 overflow-hidden z-20 rounded-xl bg-zinc-950"
>
  <div id="nav-content" class="overflow-hidden h-0 text-neutral-200">
    <nav class="grid grid-cols-1 py-4">
      {
        links.map((work, index) => (
          <a
            href={work.path}
            class="text-2xl lg:text-3xl block font-semibold px-8 py-4 hover:text-white md:pl-12 hover:bg-neutral-800 transition nav-links"
          >
            {work.name}{' '}
            <span class="text-sm md:text-base lg:text-lg font-medium text-neutral-400">
              (0{index + 1})
            </span>
          </a>
        ))
      }
    </nav>
    <div
      class="py-4 2xl:py-6 space-y-4 px-8 md:px-12 border-t-2 border-b-2 border-zinc-800"
    >
      <h3 class="text-lg xl:text-2xl text-neutral-400 font-semibold">
        Socials.
      </h3>
      <div class="flex gap-x-6 gap-y-8 responsive-cols">
        {
          socials.map((social) => (
            <a
              target="_blank"
              class="flex items-center gap-1 group/link"
              href={social.href}
            >
              <Icon class="size-4 md:size-5" name={social.icon} />
            </a>
          ))
        }
      </div>
      <a
        href="mailto:yagnik47.dev@gmail.com"
        class="block bg-neutral-100 text-neutral-900 text-center font-medium px-4 py-3 text-sm rounded-full md:hidden"
        >Contact me</a
      >
    </div>
  </div>
  <div
    class="flex justify-between items-center px-8 md:px-12 py-4 motion-reduce:transition-none"
  >
    <a
      class="text-xl flex items-center space-x-2 font-semibold text-neutral-100"
      href="/"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 24 24"
        fill="none"
        stroke="currentColor"
        stroke-width="2"
        stroke-linecap="round"
        stroke-linejoin="round"
        class="lucide lucide-terminal"
        ><polyline points="4 17 10 11 4 5"></polyline><line
          x1="12"
          x2="20"
          y1="19"
          y2="19"></line></svg
      >
      <span>yagnik.dev</span>
    </a>
    <div class="flex space-x-8 items-center">
      <a
        href="mailto:yagnik47.dev@gmail.com"
        class="block bg-neutral-800 text-neutral-100 text-sm px-4 py-2 rounded-full max-md:hidden"
        >Contact me</a
      >
      <button id="ham-btn" class="size-6 text-neutral-100" aria-label="Menu">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          fill="none"
          viewBox="0 0 24 24"
          stroke-width="1.5"
          stroke="currentColor"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            d="M3.75 9h16.5m-16.5 6.75h16.5"></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<script>
  import { animate } from 'motion'
  const navCollapseSection = document.getElementById('nav-content')!
  let navContentHeight = navCollapseSection?.scrollHeight ?? 0
  const hamBtn = document.getElementById('ham-btn')!
  const floatingBarContainer = document.getElementById('floatingBarContainer')!
  const navLinks = document.querySelectorAll(
    '.nav-links',
  ) as NodeListOf<HTMLAnchorElement>

  const prefersReducedMotion = window.matchMedia(
    '(prefers-reduced-motion: reduce)',
  ).matches

  window.addEventListener('resize', () => {
    navContentHeight = navCollapseSection?.scrollHeight ?? 0
  })

  window.addEventListener('keydown', (e) => {
    if (
      floatingBarContainer.dataset.state === 'open' &&
      e.code.startsWith('Digit')
    )
      navLinks[parseInt(e.key) - 1]?.click()
    if (floatingBarContainer.dataset.state === 'open' && e.key === 'Escape')
      setCloseState(prefersReducedMotion)
  })

  hamBtn.addEventListener('click', () => {
    if (floatingBarContainer.dataset.state === 'open')
      setCloseState(prefersReducedMotion)
    else setOpenState(prefersReducedMotion)
  })

  document.addEventListener('click', (event) => {
    // @ts-ignore
    const isClickInside = floatingBarContainer.contains(event.target)
    if (!isClickInside && floatingBarContainer.dataset.state === 'open')
      setCloseState(prefersReducedMotion)
  })

  navLinks.forEach((link) => {
    link.addEventListener('click', () => {
      document.addEventListener('astro:after-swap', () => {
        setCloseState(prefersReducedMotion, false)
      })
    })
  })

  function setOpenState(reducedMotion: boolean) {
    if (
      floatingBarContainer.clientHeight + navContentHeight <
      window.innerHeight
    )
      document.body.style.overflow = 'hidden'
    else floatingBarContainer.style.overflow = 'auto'
    floatingBarContainer.setAttribute('data-state', 'open')
    animate(
      navCollapseSection,
      {
        height: `${navContentHeight}px`,
      },
      { duration: reducedMotion ? 0 : 0.3 },
    )
  }
  async function setCloseState(reducedMotion: boolean, animation = true) {
    floatingBarContainer.setAttribute('data-state', 'closed')
    const navClosed = animate(
      navCollapseSection,
      {
        height: 0,
      },
      { duration: reducedMotion || !animation ? 0 : 0.3 },
    )

    await navClosed.finished
    document.body.style.overflow = 'visible'
  }
</script>
